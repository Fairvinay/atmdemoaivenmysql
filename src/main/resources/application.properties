# Reduce logging level to make sure the application works with SAM local
# https://github.com/aws/serverless-java-container/issues/134
logging.level.root=WARN
#atmdemo.c5y66yqeqm7t.us-east-1.rds.amazonaws.com  
# MYSQL Snapshot --> myatmdemojan12.c5y66yqeqm7t.us-east-1.rds.amazonaws.com  Jan 12 
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# MYSQL address: jdbc:mysql://localhost:3306/schemaname?serverTimezone=UTC
spring.datasource.url=jdbc:mysql://avnadmin:AVNS_ilEg56f5oIoOd88LnNU@mysql-158c35e3-storenotify.l.aivencloud.com:28518/atmdemo?
#jdbc:mysql://my-atmdemo.c5y66yqeqm7t.us-east-1.rds.amazonaws.com:3306/atmdemo?serverTimezone=UTC
#mysql://avnadmin:AVNS_ilEg56f5oIoOd88LnNU@mysql-158c35e3-storenotify.l.aivencloud.com:28518/defaultdb?ssl-mode=REQUIRED
# ${VARIABLE} => environment variable - do not push password / usernames etc. to git!
#server.port=8080
server.port=7321
#spring.datasource.username=root
#spring.datasource.password=root
spring.datasource.username=avnadmin
spring.datasource.password=AVNS_ilEg56f5oIoOd88LnNU

#spring.datasource.password=Aoot!123_123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.pool-name=HikariMySqlPool-1
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.maxLifetime=1800000 
# cross -orign 
spring.cors-origin=http://localhost:4200
#https://storenotify.in
# CREATE DATABASE atmdemo
# mysql -u root -p 

# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" (create tables on start, delete at the end)
# e.g. update = update new columns  create-drop create, validate, and update
# had to manually create the tables using MySQL WorkBench connecting remotely 
# had to set the SET SESSION sql_require_primary_key = 0; THIS IS required  to create 
# role_seq and user_roles tables 
spring.jpa.hibernate.ddl-auto=update
server.servlet.session.cookie.http-only=false 
# use sql for MySQL - use without number (do not use MySQL5!!)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.logging.level.org.hibernate.SQL=debug

# Show or not log for each sql query
spring.jpa.show-sql=true
# 